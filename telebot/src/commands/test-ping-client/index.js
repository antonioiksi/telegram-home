const {bot} = require('../../bot')
const fs = require('fs');

const FILE_NAME = '/home/pi/test-ping';
const IP = "10.0.0.31"

const testPingClient = (msg) => {
    let rawdata
    try {
        rawdata = fs.readFileSync(FILE_NAME);
    } catch (e) {
        return msg.reply.text('üëé —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    let test_ping = JSON.parse(rawdata);
    console.log(test_ping);
    if(IP in test_ping) {
        if (test_ping[IP]=='alive')
            return bot.sendMessage(msg.from.id, `üëç –Ω–∞ –¥–∞–Ω–Ω—ã–µ –º–æ–º–µ–Ω—Ç —Å—Ç–∞—Ç—É—Å –∫–∞–º–µ—Ä—ã –≤ –∫–æ—Ç–µ–ª—å–Ω–æ–π ${test_ping["10.0.0.31"]} üëç`);
        else if (test_ping[IP]=='dead')
            return bot.sendMessage(msg.from.id, `üëé –Ω–∞ –¥–∞–Ω–Ω—ã–µ –º–æ–º–µ–Ω—Ç —Å—Ç–∞—Ç—É—Å –∫–∞–º–µ—Ä—ã –≤ –∫–æ—Ç–µ–ª—å–Ω–æ–π ${test_ping["10.0.0.31"]} üëé`);
        else
            return bot.sendMessage(msg.from.id, `ü§î –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–∞–º–µ—Ä–µ –≤ –∫–æ—Ç–µ–ª—å–Ω–æ–π ${test_ping["10.0.0.31"]} ü§î`);
    } else {
        return bot.sendMessage(msg.from.id, `ü§î –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–∞–º–µ—Ä–µ –≤ –∫–æ—Ç–µ–ª—å–Ω–æ–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ü§î`);
    }
};

module.exports.testPingClient = testPingClient
